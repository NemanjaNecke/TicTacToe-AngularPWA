{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/toolbar\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/grid-list\";\nimport * as i7 from \"../square/square.component\";\nconst _c0 = [\"input\"];\n\nfunction BoardComponent_h2_13_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.players[0]);\n  }\n}\n\nfunction BoardComponent_h2_13_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.players[1]);\n  }\n}\n\nfunction BoardComponent_h2_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, BoardComponent_h2_13_span_2_Template, 2, 1, \"span\", 5);\n    i0.ɵɵtemplate(3, BoardComponent_h2_13_span_3_Template, 2, 1, \"span\", 5);\n    i0.ɵɵtext(4, \" won the game!\\n\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Player \", ctx_r1.winner, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.winner == \"X\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.winner == \"O\");\n  }\n}\n\nfunction BoardComponent_mat_grid_tile_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 8)(1, \"app-square\", 9);\n    i0.ɵɵlistener(\"click\", function BoardComponent_mat_grid_tile_15_Template_app_square_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const i_r6 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.makeMove(i_r6);\n    })(\"click\", function BoardComponent_mat_grid_tile_15_Template_app_square_click_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.clickEvent();\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const val_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"colspan\", 1)(\"rowspan\", 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"status\", ctx_r2.status)(\"value\", val_r5);\n  }\n}\n\nexport let BoardComponent = /*#__PURE__*/(() => {\n  class BoardComponent {\n    constructor() {\n      this.squares = [];\n      this.players = [];\n      this.status = false;\n    }\n\n    ngOnInit() {\n      this.newGame();\n    }\n\n    playerNames(name) {\n      this.players.push(name);\n      this.inputName.nativeElement.value = '';\n    }\n\n    newGame() {\n      this.squares = Array(9).fill(null);\n      this.winner = '';\n      this.xIsNext = true;\n    }\n\n    get player() {\n      return this.xIsNext ? 'X' : 'O';\n    }\n\n    makeMove(idx) {\n      if (!this.squares[idx]) {\n        this.squares.splice(idx, 1, this.player);\n        this.xIsNext = !this.xIsNext;\n      }\n\n      this.winner = this.calculateWinner();\n    }\n\n    calculateWinner() {\n      const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n\n        if (this.squares[a] && this.squares[a] === this.squares[b] && this.squares[a] === this.squares[c]) {\n          return this.squares[a];\n        }\n      }\n\n      return null;\n    }\n\n    clickEvent() {\n      this.status = true;\n      console.log(this.status);\n    }\n\n  }\n\n  BoardComponent.ɵfac = function BoardComponent_Factory(t) {\n    return new (t || BoardComponent)();\n  };\n\n  BoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BoardComponent,\n    selectors: [[\"app-board\"]],\n    viewQuery: function BoardComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputName = _t.first);\n      }\n    },\n    decls: 16,\n    vars: 5,\n    consts: [[\"color\", \"primary\", 1, \"controls\"], [\"appearance\", \"fill\"], [\"type\", \"text\", \"matInput\", \"\", 3, \"keyup.enter\"], [\"input\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"], [4, \"ngIf\"], [\"cols\", \"3\", \"rowHeight\", \"150px\", 1, \"board\"], [3, \"colspan\", \"rowspan\", 4, \"ngFor\", \"ngForOf\"], [3, \"colspan\", \"rowspan\"], [3, \"status\", \"value\", \"click\"]],\n    template: function BoardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r10 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\")(2, \"h1\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-form-field\", 1)(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Enter Player Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 2, 3);\n        i0.ɵɵlistener(\"keyup.enter\", function BoardComponent_Template_input_keyup_enter_7_listener() {\n          i0.ɵɵrestoreView(_r10);\n\n          const _r0 = i0.ɵɵreference(8);\n\n          return ctx.playerNames(_r0.value);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"mat-toolbar-row\");\n        i0.ɵɵtext(10);\n        i0.ɵɵelementStart(11, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function BoardComponent_Template_button_click_11_listener() {\n          return ctx.newGame();\n        });\n        i0.ɵɵtext(12, \"Start new Game\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, BoardComponent_h2_13_Template, 5, 3, \"h2\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"mat-grid-list\", 6);\n        i0.ɵɵtemplate(15, BoardComponent_mat_grid_tile_15_Template, 2, 4, \"mat-grid-tile\", 7);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Current Player: \", ctx.player, \" \");\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate2(\" \", ctx.players[0], \" vs. \", ctx.players[1], \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.winner);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.squares);\n      }\n    },\n    directives: [i1.MatToolbar, i1.MatToolbarRow, i2.MatFormField, i2.MatLabel, i3.MatInput, i4.MatButton, i5.NgIf, i6.MatGridList, i5.NgForOf, i6.MatGridTile, i7.SquareComponent],\n    styles: [\".board[_ngcontent-%COMP%]{width:60%;height:60%;display:flex;flex-direction:column;justify-content:center;align-items:center}app-square[_ngcontent-%COMP%]{height:100%;width:100%}.controls[_ngcontent-%COMP%]{margin-bottom:3%}.controls[_ngcontent-%COMP%]   mat-toolbar-row[_ngcontent-%COMP%]{display:flex;justify-content:space-evenly}\"]\n  });\n  return BoardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}